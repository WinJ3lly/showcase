define(["./progressModel"],function(s){class e extends Backbone.Model{defaults(){return{_progressModels:null,_itemActive:null}}initialize(){this.set("_isDebug",Hybrid.isDebug);var e,t=[this.createProgressModel("Content",Hybrid.blocks)];Hybrid.recipes.length&&(e=this.createProgressModel("Recipes",Hybrid.recipes),t.push(e)),this.set("_progressModels",new Backbone.Collection(t)),this.setupEventListeners(),this.get("_progressModels").first().setActive()}setupEventListeners(){this.listenTo(this.get("_progressModels"),{"change:_isActive":this.onProgressModelActiveChange,"change:_itemActive":this.onProgressModelItemActiveChange})}onProgressModelItemActiveChange(e,t){this.set("_itemActive",t)}onProgressModelActiveChange(t,e){e&&this.get("_progressModels").each(e=>{e!==t&&e.set("_isActive",!1)})}createProgressModel(e,t){return new s({title:e,_items:t})}getActiveProgressModel(){let e=this.get("_progressModels").find(e=>e.get("_isActive"));return e||(e=this.get("_progressModels").first()).set("_isActive",!0),e}setActiveContent(e){this.getActiveProgressModel().setActiveItem(e)}setActiveContentPrev(){this.getActiveProgressModel().setActiveItemPrev()}setActiveContentNext(){this.getActiveProgressModel().setActiveItemNext()}getActiveContent(){return this.get("_itemActive")}registerProgressModel(e){this.get("progressModels").push(e),$.debugLog('"'+e.get("title")+'" ProgressModel registered.')}changeProgressModel(e){var t;this.get("progressModelCur")!=e&&((t=this.get("progressModelCur"))&&this.stopListening(t,"change:contentModelIdx"),this.set("progressModelCur",e),_.delay(function(){this.set("contentModelIdx",e.get("contentModelIdx")||0)}.bind(this)),this.listenTo(e,"change:contentModelIdx",this.onProgressModelContentModelIdxChange),this.set("contentModelCount",e.get("contentCollection").models.length),$.debugLog("progressModelCur changed to: "+e.get("title")))}onProgressModelContentModelIdxChange(e,t){this.set("contentModelIdx",t||0)}}return e});