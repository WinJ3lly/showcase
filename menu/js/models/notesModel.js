define(["./notesItemModel","libraries/jquery.cookie"],function(o){class e extends Backbone.Model{defaults(){return{_parent:null,_items:null,_autoSaveDebounce:1e3,_cookieExpires:28}}initialize(){this.saveToCookies=_.debounce(this.saveToCookies.bind(this),this.get("_autoSaveDebounce"));var e=`${Hybrid.course.get("title")} - ${Hybrid.contentObject.get("title")} - Notes`,t=`${Hybrid.contentObject.get("productionCode")}_T${Hybrid.contentObject.get("topicNum")}_notes`;this.set("saveFilename",e),this.set("cookieName",t),this.set("_items",new Backbone.Collection),this.loadFromCookies()}toggle(){this.set("_isActive",!Boolean(this.get("_isActive")))}createItemModel(e,t){return e.get("_note")?e.get("_note"):(t=new o({_parent:this,_block:e,body:t||""}),e.set("_note",t),this.get("_items").push(t),t)}loadFromCookies(){var o=this.get("cookieName"),i=$.cookie(o);if(i){let e=i.replace(/'/g,'"'),t=(e=e.replace(/&lsquo;/g,"'"),{});try{t=JSON.parse(e),_.each(t,e=>{let t=e._id;var o=Hybrid.slides.find(e=>e.get("_id")==t);if(!o)throw"notesModel.js: could not find SlideModel for notesItemModel cookie with '_id': "+t;this.createItemModel(o,e.body)}),Hybrid.log.debug("notesModel.js: Found existing notes cookie for "+o,t)}catch(e){Hybrid.log.error(e,t)}}}saveToCookies(){var e=this.get("cookieName");let o=[];this.get("_items").each((e,t)=>{e.get("body")&&o.push({_id:e.get("_block").get("_id"),body:e.get("body")})});var t=(t=JSON.stringify(o)).replace(/"/g,"'");$.cookie(e,t,{expires:this.get("_cookieExpires")}),Hybrid.log.debug('Saved notes cookie to "'+e+'"',t)}}return e});