define(["./mcView"],function(e){class t extends e{events(){return{"click .js-mc-toc-list-item":"onListItemClick","mouseenter .js-mc-toc-list-item":"onListItemMouseEnter"}}initialize(){super.initialize(),this.$el.addClass("mc-toc"),this.setupEventListeners()}getTemplate(){return"hm-mcTOC"}setupEventListeners(){this.listenTo(this.model.get("_items"),{"change:_isActive":this.onItemActiveChange})}onItemActiveChange(e,t){t&&((t=this.$(".js-mc-toc-list-item")).toggleClass("is-active",!1),t.filter(`[data-index="${e.get("_index")}"]`).toggleClass("is-active",!0))}onListItemClick(e){let t=$(e.currentTarget).data("index");e=this.model.get("_items").find(e=>e.get("_index")==t);e.set("_isActive",!1),e.set("_isActive",!0)}onListItemMouseEnter(e){var e=$(e.currentTarget).data("index"),t=this.$(".js-mc-toc-preview-item"),t=(t.toggleClass("is-active",!1),t.filter(`[data-index="${e}"]`)),e=(t.toggleClass("is-active",!0),t.find(".js-mc-toc-preview-img"));e.hasClass("is-ready")||e.attr("src",e.attr("data-src")).addClass("is-ready")}}return t});